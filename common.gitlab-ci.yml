spec:
  inputs:
    route:
      type: string

---

stages:
  - $[[ inputs.route ]]_build
  - $[[ inputs.route ]]_deploy

$[[ inputs.route ]]_build:
  variables:
    PROJECT_DIR: $[[ inputs.route ]]
    DOCKER_TLS_CERTDIR: "/certs"

  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - apk add --no-cache jq
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
    - docker info
  script:
    - cd $PROJECT_DIR
    - VERSION=$(jq -r '.version' version.json)
    - docker build -t registry.gitlab.au.dk/au685087/wao_group_19_examinrepo/$PROJECT_DIR:$VERSION .
    - docker push registry.gitlab.au.dk/au685087/wao_group_19_examinrepo/$PROJECT_DIR:$VERSION
    - docker tag registry.gitlab.au.dk/au685087/wao_group_19_examinrepo/$PROJECT_DIR:$VERSION registry.gitlab.au.dk/au685087/wao_group_19_examinrepo/$PROJECT_DIR:latest
    - docker push registry.gitlab.au.dk/au685087/wao_group_19_examinrepo/$PROJECT_DIR:latest



$[[ inputs.route ]]_deploy:
  stage: deploy
  image: alpine:latest
  variables:
    PROJECT_DIR: $[[ inputs.route ]]
  needs:
    - job: $[[ inputs.route ]]_build
  before_script:
    - apk add --no-cache git yq jq
  script:
    - cd $PROJECT_DIR
    - VERSION=$(jq -r '.version' version.json)
    - cd ../../
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"
    - if [ -d "k8dev/.git" ]; then cd k8dev && git pull; else git clone https://au706327:glpat-mcWPbbbkngCJrtj8Mjog@gitlab.au.dk/ekamenwao/k8dev.git && cd k8dev; fi
    - yq -i '.spec.template.spec.containers.[0].image = "registry.gitlab.au.dk/au685087/wao_group_19_examinrepo/'"${PROJECT_DIR}"':'"${VERSION}"'"' prod/"${PROJECT_DIR}"_deployment.yml
    - git add .
    - git commit -m "Update deployment YML files"
    - git push